spring:
  application:
    name: property-service

  main:
    allow-bean-definition-overriding: ${SPRING_ALLOW_BEAN_DEFINITION_OVERRIDING}

  data:
    cassandra:
      contact-points: ${DB_CONTACT_POINTS}
      keyspace-name: ${DB_PROPERTY_KEYSPACE}
      port: ${DB_PORT}
      schema-action: ${DB_SCHEME_ACTION}
      local-datacenter: ${DB_DATACENTER}
      request:
        timeout: ${DB_REQUEST_TIMEOUT}

  cache:
    type: redis
  redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT}
    password: ${REDIS_PASSWORD}

  kafka:
    consumer:
      value-deserializer: "org.springframework.kafka.support.serializer.JsonDeserializer"
      properties:
        "[spring.json.value.default.type]": "com.rental.propertysa.entity.Property"
        "[spring.json.trusted.packages]": "com.rental.propertysa.entity"

    producer:
      value-serializer: "org.springframework.kafka.support.serializer.JsonSerializer"
      properties:
        "[spring.json.add.type.headers]": false

    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVER}

  zipkin:
    baseUrl: ${ZIPKIN_SERVER}


kafka:
  reservationTopic: ${PROPERTY_REQUEST_TOPIC}

server:
  port: ${SERVICE_PORT}